// <auto-generated />
using System;
using EveryoneCourses.ClassLibrary;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EveryoneCourses.ClassLibrary.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20211129074235_added courses to teachers")]
    partial class addedcoursestoteachers
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EveryoneCourses.ClassLibrary.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CourseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumberOfStudents")
                        .HasColumnType("int");

                    b.Property<decimal>("Rating")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("CourseId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = 1,
                            CourseName = "C# Basics",
                            CreatedDate = new DateTime(2021, 11, 29, 0, 0, 0, 0, DateTimeKind.Local),
                            NumberOfStudents = 0,
                            Rating = 0m,
                            TeacherId = 1
                        },
                        new
                        {
                            CourseId = 2,
                            CourseName = "C# Advanced",
                            CreatedDate = new DateTime(2021, 11, 29, 0, 0, 0, 0, DateTimeKind.Local),
                            NumberOfStudents = 0,
                            Rating = 0m,
                            TeacherId = 2
                        });
                });

            modelBuilder.Entity("EveryoneCourses.ClassLibrary.Models.Teacher", b =>
                {
                    b.Property<int>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Rating")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TotalNumberOfStudents")
                        .HasColumnType("int");

                    b.HasKey("TeacherId");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            TeacherId = 1,
                            Name = "Mohamed Elhakim",
                            Rating = 0m,
                            TotalNumberOfStudents = 0
                        },
                        new
                        {
                            TeacherId = 2,
                            Name = "Mohamed Nasser",
                            Rating = 0m,
                            TotalNumberOfStudents = 0
                        });
                });

            modelBuilder.Entity("EveryoneCourses.ClassLibrary.Models.Course", b =>
                {
                    b.HasOne("EveryoneCourses.ClassLibrary.Models.Teacher", "Teacher")
                        .WithMany("Courses")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("EveryoneCourses.ClassLibrary.Models.Teacher", b =>
                {
                    b.Navigation("Courses");
                });
#pragma warning restore 612, 618
        }
    }
}
